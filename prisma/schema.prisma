// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  TRIAL
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  firstname  String
  lastname   String
  password   String
  userStatus UserStatus
  roleId     Int
  role       Role       @relation(fields: [roleId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Role {
  id    Int      @id @default(autoincrement())
  name  UserRole @unique
  users User[]
}

model Currency {
  id            String         @id @default(cuid())
  code          String         @unique
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  ratesAsBase   ExchangeRate[] @relation("BaseCurrency")
  ratesAsTarget ExchangeRate[] @relation("TargetCurrency")
}

model ExchangeRate {
  id               String   @id @default(cuid())
  baseCurrency     Currency @relation("BaseCurrency", fields: [baseCurrencyId], references: [id])
  baseCurrencyId   String
  targetCurrency   Currency @relation("TargetCurrency", fields: [targetCurrencyId], references: [id])
  targetCurrencyId String
  rate             Float
  date             DateTime // La date du taux de change (utile pour l'historique)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([baseCurrencyId, targetCurrencyId, date])
}

